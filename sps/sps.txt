
1 ;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_ALL_PORDERS_TORTILLAS\r\n(\r\n	IN SalesOrderNum int\r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n	\r\n	SELECT T0.\"DocEntry\",T0.\"OriginNum\", T0.\"U_CTS_Type\" FROM OWOR T0 WHERE T0.\"OriginNum\"=:SalesOrderNum  and  T0.\"U_CTS_Type\"!='' ORDER BY T0.\"U_CTS_Type\";\r\n\r\n	\r\n
2 ;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_BINLOCATION_BY_WAREHOUSE\r\n(\r\n	IN WhsCode varchar(50)\r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n	\r\n	\r\n	SELECT \r\n	T0.\"AbsEntry\", \r\nT0.\"BinCode\", T0.\"WhsCode\" FROM OBIN T0\r\n	WHERE T0.\"WhsCode\"=:WhsCode AND T0.\"U_CTS_ART_BIN\"='Y'\r\n\r\n	order by T0.\"BinCode\" ASC;\r\n
3 ;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_DOUGH_TO_ISSUE (IN PO_DOCENTRY VARCHAR(50), in PALLET_SIZE INT)\r\nAS\r\nBEGIN\r\n   ---dOCENTRY PO BASE\r\n  SELECT \r\n 	MAX(T1.\"OriginNum\"),\r\n    T0.\"BsDocEntry\", \r\n    (SELECT K0.\"LineNum\" FROM WOR1 K0  \r\n    INNER JOIN OWOR K1 ON K0.\"DocEntry\" = K1.\"DocEntry\" inner join OITM K2 on K2.\"ItemCode\"=K0.\"ItemCode\" \r\n    WHERE K1.\"OriginNum\" =MAX(T1.\"OriginNum\")  and  K1.\"U_CTS_Type\" ='Parent' and  K2.\"QryGroup5\" ='N'AND K2.\"TreeType\" = 'P' and K0.\"ItemCode\" like 'DOH%') as \"BaseLinNum\", \r\n    T0.\"ItemCode\",\r\n    ( SELECT(max(K0.\"BaseQty\")*:PALLET_SIZE) FROM WOR1 K0  \r\n    INNER JOIN OWOR K1 ON K0.\"DocEntry\" = K1.\"DocEntry\" \r\n    inner join OITM K2 on K2.\"ItemCode\"=K1.\"ItemCode\" \r\n    WHERE K1.\"OriginNum\" =MAX(T1.\"OriginNum\")  and  K1.\"U_CTS_Type\" ='Parent' and  K2.\"QryGroup5\" ='N' and K0.\"ItemCode\" like 'DOH%'  )AS \"Quantity\",\r\n    max(T0.\"BatchNum\") as \"BatchNum\",\r\n    ( SELECT(max(K0.\"BaseQty\")*:PALLET_SIZE) FROM WOR1 K0  \r\n    INNER JOIN OWOR K1 ON K0.\"DocEntry\" = K1.\"DocEntry\"                                                                                                                          
4 ;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_DOUGH_TO_ISSUE_bk (IN PO_DOCENTRY VARCHAR(50) )\r\nAS\r\nBEGIN\r\n   ---dOCENTRY PO BASE\r\n  SELECT \r\n    T0.\"BsDocEntry\", \r\n    (SELECT K0.\"LineNum\" FROM WOR1 K0  \r\n    INNER JOIN OWOR K1 ON K0.\"DocEntry\" = K1.\"DocEntry\" inner join OITM K2 on K2.\"ItemCode\"=K0.\"ItemCode\" \r\n    WHERE K1.\"OriginNum\" =MAX(T1.\"OriginNum\")  and  K1.\"U_CTS_Type\" ='Parent' and  K2.\"QryGroup5\" ='N') as \"BaseLinNum\", \r\n    T0.\"ItemCode\", \r\n    TotalQuantities.TotalQuantity AS \"Quantity\",\r\n    T0.\"BatchNum\", \r\n    SUM(T0.\"Quantity\") AS \"QuantityBatch\"\r\nFROM \r\n    IBT1 T0 \r\nINNER JOIN \r\n    OWOR T1 ON T0.\"BsDocEntry\" = T1.\"DocEntry\"\r\nINNER JOIN \r\n    (SELECT \r\n         T0.\"ItemCode\", \r\n         SUM(T0.\"Quantity\") AS TotalQuantity\r\n     FROM \r\n         IBT1 T0 \r\n     INNER JOIN \r\n         OWOR T1 ON T0.\"BsDocEntry\" = T1.\"DocEntry\"\r\n     WHERE \r\n         T0.\"ItemCode\" LIKE '%DOH%' \r\n         AND T0.\"BaseType\" = '59' \r\n         AND (SELECT K1.\"DocEntry\" \r\n              FROM OWOR K1 \r\n              WHERE \r\n                                                                                                           
5 ;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_DOUGH_TO_ISSUE_ch (IN PO_DOCENTRY VARCHAR(50), in PALLET_SIZE INT)\r\nAS\r\nBEGIN\r\n   ---dOCENTRY PO BASE\r\n  SELECT \r\n  MAX(T1.\"OriginNum\"),\r\n \r\n    T0.\"BsDocEntry\", \r\n    (SELECT K0.\"LineNum\" FROM WOR1 K0  \r\n    INNER JOIN OWOR K1 ON K0.\"DocEntry\" = K1.\"DocEntry\" inner join OITM K2 on K2.\"ItemCode\"=K0.\"ItemCode\" \r\n    WHERE K1.\"OriginNum\" =MAX(T1.\"OriginNum\")  and  K1.\"U_CTS_Type\" ='Parent' and  K2.\"QryGroup5\" ='N') as \"BaseLinNum\", \r\n    T0.\"ItemCode\", \r\n    ( SELECT(max(K0.\"BaseQty\")*:PALLET_SIZE) FROM WOR1 K0  \r\n    INNER JOIN OWOR K1 ON K0.\"DocEntry\" = K1.\"DocEntry\" \r\n    inner join OITM K2 on K2.\"ItemCode\"=K1.\"ItemCode\" \r\n    WHERE K1.\"OriginNum\" =MAX(T1.\"OriginNum\")  and  K1.\"U_CTS_Type\" ='Parent' and  K2.\"QryGroup5\" ='N'  )AS \"Quantity\",\r\n    T0.\"BatchNum\", \r\n     ( SELECT(max(K0.\"BaseQty\")*:PALLET_SIZE) FROM WOR1 K0  \r\n    INNER JOIN OWOR K1 ON K0.\"DocEntry\" = K1.\"DocEntry\" \r\n    inner join OITM K2 on K2.\"ItemCode\"=K1.\"ItemCode\" \r\n    WHERE K1.\"OriginNum\" =MAX(T1.\"O                                                                                                                    
6 ;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_LOT_BY_ITEM\r\n(\r\n	IN ItemCode varchar(100),\r\n	IN WhsCode varchar(50)\r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n	\r\n	\r\n\r\n SELECT T0.\"ItemCode\",T0.\"OnHandQty\" AS \"Quantity\" , T2.\"DistNumber\" AS \"BatchNum\" FROM OBBQ T0  INNER JOIN OBIN T1 ON T0.\"BinAbs\" = T1.\"AbsEntry\" INNER JOIN OBTN T2 ON T0.\"SnBMDAbs\" = T2.\"AbsEntry\" \r\nWHERE T0.\"ItemCode\" =:ItemCode AND  T0.\"WhsCode\" =:WhsCode AND T1.\"U_CTS_ART_BIN\" ='Y' AND T0.\"OnHandQty\">0\r\n\r\n\r\n	order by T0.\"OnHandQty\" ASC;\r\n
7 ;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_MIXES_SHIFT (IN DOCENTRY INT,SHIFT VARCHAR(50))\r\nAS\r\nBEGIN\r\n   \r\n    \r\n	SELECT \r\n	COUNT(DISTINCT T0.\"DocEntry\") as \"MixesShift\"\r\n	 FROM IGE1 T0 INNER JOIN OIGE T1 ON T0.\"DocEntry\"=T1.\"DocEntry\" \r\n	 WHERE T0.\"BaseType\"='202' and T0.\"BaseEntry\"=:DOCENTRY AND T1.\"U_CTS_Turno\"=:SHIFT ;\r\n	\r\n	 \r\n	 \r\n	\r\n	 \r\n	
8 ;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_MIXES_SHIFT_UPDATED (IN DOCENTRY INT,SHIFT VARCHAR(50), LINE VARCHAR(50))\r\nAS\r\nBEGIN\r\n   \r\n    \r\n	SELECT \r\n	COUNT(DISTINCT T0.\"DocEntry\") as \"MixesShift\"\r\n	 FROM IGE1 T0 INNER JOIN OIGE T1 ON T0.\"DocEntry\"=T1.\"DocEntry\" \r\n	 WHERE T0.\"BaseType\"='202' and T0.\"BaseEntry\"=DOCENTRY AND T1.\"U_CTS_Turno\"=SHIFT AND T1.\"U_CTS_PLine\"=LINE AND T1.\"CreateDate\"=CURRENT_DATE;\r\n	\r\n	 \r\n	 \r\n	\r\n	 \r\n	
9 ;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_MIXES_SHIFT_UPDATED_09032024 (IN DOCENTRY INT,SHIFT VARCHAR(50), LINE VARCHAR(50))\r\nAS\r\nBEGIN\r\n   \r\n    \r\n	SELECT \r\n    SUM(factors.\"factor_total\") AS \"MixesShift\"\r\nFROM (\r\n    SELECT \r\n        CASE \r\n            WHEN SUBSTR_after(T1.\"Comments\", 'Mix:') = '' \r\n            THEN 1\r\n            ELSE TO_DECIMAL(SUBSTR_after(T1.\"Comments\", 'Mix:'))\r\n        END AS \"factor_total\"\r\n    FROM OIGE T1\r\n    WHERE\r\n        EXISTS (\r\n            SELECT 1\r\n            FROM IGE1 T0\r\n            WHERE T0.\"DocEntry\" = T1.\"DocEntry\"\r\n              AND T0.\"BaseType\" = '202'\r\n              AND T0.\"BaseEntry\" = DOCENTRY\r\n        )\r\n        AND T1.\"U_CTS_Turno\" = SHIFT\r\n        AND T1.\"U_CTS_PLine\" = LINE\r\n        AND T1.\"CreateDate\" = CURRENT_DATE\r\n    GROUP BY T1.\"DocNum\", T1.\"Comments\"\r\n) AS factors;\r\n	\r\n	 \r\n	 END                                                                                                                                                                                                                                                                                                                    
10;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_MIXES_SHIFT_VG (IN DOCENTRY INT,SHIFT VARCHAR(50), LINE VARCHAR(50))\r\nAS\r\nBEGIN\r\n   \r\n    \r\n	SELECT \r\n	COUNT(DISTINCT T0.\"DocEntry\") as \"MixesShift\"\r\n	 FROM IGE1 T0 INNER JOIN OIGE T1 ON T0.\"DocEntry\"=T1.\"DocEntry\" \r\n	 WHERE T0.\"BaseType\"='202' and T0.\"BaseEntry\"=DOCENTRY AND T1.\"U_CTS_Turno\"=SHIFT AND T1.\"U_CTS_PLine\"=LINE AND T1.\"CreateDate\"=CURRENT_DATE;\r\n	\r\n	 \r\n	 \r\n	\r\n	 \r\n	
11;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PALLETS_SHIFT(IN DOCENTRY INT,SHIFT VARCHAR(50))\r\nAS\r\nBEGIN\r\n    DECLARE lv_sql VARCHAR(5000);\r\n    \r\n    \r\n	SELECT COUNT(*) as \"PalletsShift\" FROM \"@CTS_ARTSN_PALLETS\"  T0 \r\n	WHERE T0.\"U_CTS_PO_DOCENTRY\" =:DOCENTRY  AND SUBSTR_AFTER(T0.\"U_CTS_PO\",'-')=:SHIFT;\r\n	 \r\n	 \r\n	\r\n	 \r\n	
12;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PALLETS_SHIFT_UPDATED(IN DOCENTRY INT,SHIFT VARCHAR(50),LINE VARCHAR(50) )\r\nAS\r\nBEGIN\r\n    DECLARE lv_sql VARCHAR(5000);\r\n    \r\n    \r\n	SELECT COUNT(*) as \"PalletsShift\" FROM \"@CTS_ARTSN_PALLETS\"  T0 \r\n	WHERE T0.\"U_CTS_PO_DOCENTRY\" =:DOCENTRY  AND SUBSTR_AFTER(T0.\"U_CTS_PO\",'-')=:SHIFT and SUBSTR_BEFORE(T0.\"U_CTS_PO\",'-')=:LINE AND T0.\"CreateDate\"=CURRENT_DATE ;\r\n	 \r\n	 \r\n	\r\n	 \r\n	
13;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_MIXES (IN baseEntry INT)\r\nAS\r\nBEGIN\r\n    DECLARE lv_sql VARCHAR(5000);\r\n    DECLARE lv_columns VARCHAR(5000);\r\n    DECLARE lv_select_columns VARCHAR(5000);\r\n    \r\n    -- Generar la lista de columnas dinámicamente\r\n    SELECT STRING_AGG(\r\n        'SUM(CASE WHEN T0.\"Dscription\" = ''' || T0.\"Dscription\" || ''' THEN T0.\"Quantity\" ELSE 0 END) AS \"' || T0.\"Dscription\" || ' (' || COALESCE(T2.\"SalUnitMsr\", '') || ')\"',\r\n        ', '\r\n    ) INTO lv_columns\r\n    FROM (SELECT DISTINCT IGE1.\"Dscription\", IGE1.\"ItemCode\"\r\n          FROM IGE1\r\n          WHERE IGE1.\"BaseEntry\" = :baseEntry) AS T0\r\n    INNER JOIN OITM T2 ON T0.\"ItemCode\" = T2.\"ItemCode\";\r\n\r\n    -- Generar la lista de columnas para la selección\r\n    SELECT STRING_AGG(\r\n        '\"' || T0.\"Dscription\" || ' (' || COALESCE(T2.\"SalUnitMsr\", '') || ')\"',\r\n        ', '\r\n    ) INTO lv_select_columns\r\n    FROM (SELECT DISTINCT IGE1.\"Dscription\", IGE1.\"ItemCode\"\r\n          FROM IGE1\r\n          WHERE IGE1.\"BaseEntry\" = :                                                                                                                                       
14;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_MIXES_BATCHES (IN baseEntry INT)\r\nAS\r\nBEGIN\r\n    DECLARE lv_sql VARCHAR(5000);\r\n    DECLARE lv_columns VARCHAR(5000);\r\n    \r\n    -- Generar la lista de columnas dinámicamente\r\n    SELECT STRING_AGG(\r\n        'STRING_AGG(CASE WHEN T1.\"Dscription\" = ''' || T1.\"Dscription\" || ''' THEN T0.\"BatchNum\" || '' ('' || CAST(TO_DECIMAL(T0.\"Quantity\", 10, 2) AS VARCHAR) || T2.\"SalUnitMsr\" || '')'' ELSE NULL END, '', '') AS \"' || T1.\"Dscription\" || '\"',\r\n        ', '\r\n    ) INTO lv_columns\r\n    FROM (SELECT DISTINCT \"Dscription\" FROM IGE1 inner join OITM ON OITM.\"ItemCode\" = IGE1.\"ItemCode\"  WHERE OITM.\"ManBtchNum\"='Y' AND IGE1.\"DocEntry\" = :baseEntry) AS T1;\r\n    \r\n    -- Verifica que lv_columns no sea nulo\r\n    IF lv_columns IS NULL THEN\r\n        lv_columns := '';\r\n    END IF;\r\n    \r\n    -- Construcción de la consulta SQL dinámica\r\n    lv_sql := 'SELECT ' || lv_columns || '\r\n               FROM IBT1 T0\r\n               LEFT JOIN IGE1 T1 ON T0.\"BaseEntry\" = T1.\"DocEntry\" \r\n                                                                                                                                                 
15;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_MIXES_BATCHESvg (IN baseEntry INT)\r\nAS\r\nBEGIN\r\n    DECLARE lv_sql VARCHAR(5000);\r\n    DECLARE lv_columns VARCHAR(5000);\r\n    \r\n    -- Generar la lista de columnas dinámicamente\r\n    SELECT STRING_AGG(\r\n        'STRING_AGG(CASE WHEN T1.\"Dscription\" = ''' || T1.\"Dscription\" || ''' THEN T0.\"BatchNum\" || '' ('' || CAST(TO_DECIMAL(T0.\"Quantity\", 10, 2) AS VARCHAR) || T2.\"SalUnitMsr\" || '')'' ELSE NULL END, '', '') AS \"' || T1.\"Dscription\" || '\"',\r\n        ', '\r\n    ) INTO lv_columns\r\n    FROM (SELECT DISTINCT \"Dscription\" FROM IGE1 inner join OITM ON OITM.\"ItemCode\" = IGE1.\"ItemCode\"  WHERE OITM.\"ManBtchNum\"='Y' AND IGE1.\"DocEntry\" = :baseEntry) AS T1;\r\n    \r\n    -- Verifica que lv_columns no sea nulo\r\n    IF lv_columns IS NULL THEN\r\n        lv_columns := '';\r\n    END IF;\r\n    \r\n    -- Construcción de la consulta SQL dinámica\r\n    lv_sql := 'SELECT ' || lv_columns || '\r\n               FROM IBT1 T0\r\n               LEFT JOIN IGE1 T1 ON T0.\"BaseEntry\" = T1.\"DocEntry\"                                                                                                                                                    
16;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_MIXES_CHIPS (IN groupChips NVARCHAR(50))\r\nAS\r\nBEGIN\r\n    DECLARE lv_sql VARCHAR(5000);\r\n    DECLARE lv_columns VARCHAR(5000);\r\n    DECLARE lv_select_columns VARCHAR(5000);\r\n\r\n    -- Generar la lista de columnas dinámicamente\r\n    SELECT STRING_AGG(\r\n        'SUM(CASE WHEN T0.\"Dscription\" = ''' || T0.\"Dscription\" || ''' THEN T0.\"Quantity\" ELSE 0 END) AS \"' || T0.\"Dscription\" || ' (' || COALESCE(T2.\"SalUnitMsr\", '') || ')\"',\r\n        ', '\r\n    ) INTO lv_columns\r\n    FROM (SELECT DISTINCT IGE1.\"Dscription\", IGE1.\"ItemCode\"\r\n          FROM IGE1\r\n          WHERE IGE1.\"BaseEntry\" IN (SELECT \"DocEntry\" FROM OWOR WHERE \"U_CTS_GroupChips\" = :groupChips)) AS T0\r\n    INNER JOIN OITM T2 ON T0.\"ItemCode\" = T2.\"ItemCode\";\r\n\r\n    -- Generar la lista de columnas para la selección\r\n    SELECT STRING_AGG(\r\n        '\"' || T0.\"Dscription\" || ' (' || COALESCE(T2.\"SalUnitMsr\", '') || ')\"',\r\n        ', '\r\n    ) INTO lv_select_columns\r\n    FROM (SELECT DISTINCT IGE1.\"Dscription\", IGE                                                                                                                                           
17;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_MIXES_CHIPS1 (IN groupChips NVARCHAR(50))\r\nAS\r\nBEGIN\r\n    DECLARE lv_sql VARCHAR(5000);\r\n    DECLARE lv_columns VARCHAR(5000);\r\n    DECLARE lv_select_columns VARCHAR(5000);\r\n\r\n    -- Generar la lista de columnas dinámicamente\r\n    SELECT STRING_AGG(\r\n        'SUM(CASE WHEN T0.\"Dscription\" = ''' || T0.\"Dscription\" || ''' THEN T0.\"Quantity\" ELSE 0 END) AS \"' || T0.\"Dscription\" || ' (' || COALESCE(T2.\"SalUnitMsr\", '') || ')\"',\r\n        ', '\r\n    ) INTO lv_columns\r\n    FROM (SELECT DISTINCT IGE1.\"Dscription\", IGE1.\"ItemCode\"\r\n          FROM IGE1\r\n          WHERE IGE1.\"BaseEntry\" IN (SELECT \"DocEntry\" FROM OWOR WHERE \"U_CTS_GroupChips\" = :groupChips)) AS T0\r\n    INNER JOIN OITM T2 ON T0.\"ItemCode\" = T2.\"ItemCode\";\r\n\r\n    -- Generar la lista de columnas para la selección\r\n    SELECT STRING_AGG(\r\n        '\"' || T0.\"Dscription\" || ' (' || COALESCE(T2.\"SalUnitMsr\", '') || ')\"',\r\n        ', '\r\n    ) INTO lv_select_columns\r\n    FROM (SELECT DISTINCT IGE1.\"Dscription\", IG                                                                                                                                           
18;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_MIXES_CHIPS_UPDATED (IN groupChips NVARCHAR(50))\r\nAS\r\nBEGIN\r\n    DECLARE lv_sql VARCHAR(5000);\r\n    DECLARE lv_columns VARCHAR(5000);\r\n    DECLARE lv_select_columns VARCHAR(5000);\r\n\r\n    -- Generar la lista de columnas dinámicamente\r\n    SELECT STRING_AGG(\r\n        'SUM(CASE WHEN T0.\"Dscription\" = ''' || T0.\"Dscription\" || ''' THEN T0.\"Quantity\" ELSE 0 END) AS \"' || T0.\"Dscription\" || ' (' || COALESCE(T2.\"SalUnitMsr\", '') || ')\"',\r\n        ', '\r\n    ) INTO lv_columns\r\n    FROM (SELECT DISTINCT IGE1.\"Dscription\", IGE1.\"ItemCode\"\r\n          FROM IGE1\r\n          WHERE IGE1.\"BaseEntry\" IN (SELECT \"DocEntry\" FROM OWOR WHERE \"U_CTS_GroupChips\" = :groupChips)) AS T0\r\n    INNER JOIN OITM T2 ON T0.\"ItemCode\" = T2.\"ItemCode\";\r\n\r\n    -- Generar la lista de columnas para la selección\r\n    SELECT STRING_AGG(\r\n        '\"' || T0.\"Dscription\" || ' (' || COALESCE(T2.\"SalUnitMsr\", '') || ')\"',\r\n        ', '\r\n    ) INTO lv_select_columns\r\n    FROM (SELECT DISTINCT IGE1.\"Dscripti                                                                                                                                            
19;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_MIXES_UPDATED (IN baseEntry INT)\r\nAS\r\nBEGIN\r\n    DECLARE lv_sql VARCHAR(5000);\r\n    DECLARE lv_columns VARCHAR(5000);\r\n    DECLARE lv_select_columns VARCHAR(5000);\r\n    \r\n    -- Generar la lista de columnas dinámicamente\r\n    SELECT STRING_AGG(\r\n        'SUM(CASE WHEN T0.\"Dscription\" = ''' || T0.\"Dscription\" || ''' THEN T0.\"Quantity\" ELSE 0 END) AS \"' || T0.\"Dscription\" || ' (' || COALESCE(T2.\"SalUnitMsr\", '') || ')\"',\r\n        ', '\r\n    ) INTO lv_columns\r\n    FROM (SELECT DISTINCT IGE1.\"Dscription\", IGE1.\"ItemCode\"\r\n          FROM IGE1\r\n          WHERE IGE1.\"BaseEntry\" = :baseEntry) AS T0\r\n    INNER JOIN OITM T2 ON T0.\"ItemCode\" = T2.\"ItemCode\";\r\n\r\n    -- Generar la lista de columnas para la selección\r\n    SELECT STRING_AGG(\r\n        '\"' || T0.\"Dscription\" || ' (' || COALESCE(T2.\"SalUnitMsr\", '') || ')\"',\r\n        ', '\r\n    ) INTO lv_select_columns\r\n    FROM (SELECT DISTINCT IGE1.\"Dscription\", IGE1.\"ItemCode\"\r\n          FROM IGE1\r\n          WHERE IGE1.\"BaseEn                                                                                                                                        
20;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_ORDERS\r\n(\r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n	\r\n	SELECT \r\n		K0.\"DocNum\",\r\n		K0.\"DocEntry\",\r\n		K0.\"Status\",\r\n		K0.\"ItemCode\",\r\n		K0.\"CreateDate\",\r\n		K0.\"PlannedQty\",\r\n		K0.\"CmpltQty\",\r\n		K0.\"RjctQty\",\r\n		K0.\"PostDate\",\r\n		K0.\"DueDate\",\r\n		K0.\"OriginAbs\",\r\n		K0.\"OriginNum\",	\r\n		K0.\"Warehouse\",\r\n		K0.\"Uom\",\r\n		K0.\"ProdName\",\r\n		K1.\"LineNum\",\r\n		K1.\"ItemCode\",\r\n		K1.\"BaseQty\",\r\n		K1.\"PlannedQty\",\r\n		K1.\"IssuedQty\",\r\n		K1.\"IssueType\",\r\n		K1.\"wareHouse\",\r\n		K1.\"VisOrder\",\r\n		K1.\"WipActCode\",\r\n		K1.\"CompTotal\",\r\n		K1.\"OcrCode\",\r\n		K1.\"OcrCode2\",\r\n		K1.\"OcrCode3\",\r\n		K1.\"OcrCode4\",\r\n		K1.\"OcrCode5\",\r\n		K1.\"LocCode\",\r\n		K1.\"LogInstanc\",\r\n		K1.\"Project\",\r\n		K1.\"UomEntry\",\r\n		K1.\"UomCode\",\r\n		K1.\"ItemType\",\r\n		K1.\"AdditQty\",\r\n		K1.\"LineText\",\r\n		K1.\"PickStatus\",\r\n		K1.\"PickQty\",\r\n		K1.\"PickIdNo\",\r\n		K1.\"ReleaseQty\",\r\n		K1.\"ResAlloc\",\r\n		K1.\"StartDate\",\r\n		K1.\"EndDate\",\r\n		K1.\"StageId\",\r\n		K1.\"BaseQtyNum\",\r\n		K1.\"BaseQtyDen\",\r\n		K1.\"ReqDays\",\r\n		K1.\"RtCalcProp\",\r\n		K1.\"S
21;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_ORDERS_BY_ITEMGROUP\r\n(\r\n	IN ItmsGrpCod INTEGER\r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n	\r\n	SELECT \r\n		K0.\"DocNum\",\r\n		K0.\"DocEntry\",\r\n		K0.\"Status\",\r\n		K0.\"ItemCode\",\r\n		K0.\"CreateDate\",\r\n		K0.\"PlannedQty\",\r\n		K0.\"CmpltQty\",\r\n		K0.\"RjctQty\",\r\n		K0.\"PostDate\",\r\n		K0.\"DueDate\",\r\n		K0.\"OriginAbs\",\r\n		K0.\"OriginNum\",	\r\n		K0.\"Warehouse\",\r\n		K0.\"Uom\",\r\n		K0.\"ProdName\",\r\n		K1.\"LineNum\",\r\n		K1.\"ItemCode\",\r\n		K1.\"BaseQty\",\r\n		K1.\"PlannedQty\",\r\n		K1.\"IssuedQty\",\r\n		K1.\"IssueType\",\r\n		K1.\"wareHouse\",\r\n		K1.\"VisOrder\",\r\n		K1.\"WipActCode\",\r\n		K1.\"CompTotal\",\r\n		K1.\"OcrCode\",\r\n		K1.\"OcrCode2\",\r\n		K1.\"OcrCode3\",\r\n		K1.\"OcrCode4\",\r\n		K1.\"OcrCode5\",\r\n		K1.\"LocCode\",\r\n		K1.\"LogInstanc\",\r\n		K1.\"Project\",\r\n		K1.\"UomEntry\",\r\n		K1.\"UomCode\",\r\n		K1.\"ItemType\",\r\n		K1.\"AdditQty\",\r\n		K1.\"LineText\",\r\n		K1.\"PickStatus\",\r\n		K1.\"PickQty\",\r\n		K1.\"PickIdNo\",\r\n		K1.\"ReleaseQty\",\r\n		K1.\"ResAlloc\",\r\n		K1.\"StartDate\",\r\n		K1.\"EndDate\",\r\n		K1.\"StageId\",\r\n		K1.\"BaseQtyNum\",\r\n		K1.\"BaseQtyDen\",\r\n		K1.\"R      
22;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_ORDERS_CHIPS\r\n(\r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n	\r\n	SELECT \r\n		K0.\"DocNum\",\r\n		K0.\"DocEntry\",\r\n		K0.\"Status\",\r\n		K0.\"ItemCode\",\r\n		K0.\"CreateDate\",\r\n		K0.\"PlannedQty\",\r\n		K0.\"CmpltQty\",\r\n		K0.\"RjctQty\",\r\n		K0.\"PostDate\",\r\n		K0.\"DueDate\",\r\n		K0.\"OriginAbs\",\r\n		K0.\"OriginNum\",	\r\n		K0.\"Warehouse\",\r\n		K0.\"Uom\",\r\n		K0.\"ProdName\",\r\n		K1.\"LineNum\",\r\n		K1.\"ItemCode\",\r\n		K1.\"BaseQty\",\r\n		K1.\"PlannedQty\",\r\n		K1.\"IssuedQty\",\r\n		K1.\"IssueType\",\r\n		K1.\"wareHouse\",\r\n		K1.\"VisOrder\",\r\n		K1.\"WipActCode\",\r\n		K1.\"CompTotal\",\r\n		K1.\"OcrCode\",\r\n		K1.\"OcrCode2\",\r\n		K1.\"OcrCode3\",\r\n		K1.\"OcrCode4\",\r\n		K1.\"OcrCode5\",\r\n		K1.\"LocCode\",\r\n		K1.\"LogInstanc\",\r\n		K1.\"Project\",\r\n		K1.\"UomEntry\",\r\n		K1.\"UomCode\",\r\n		K1.\"ItemType\",\r\n		K1.\"AdditQty\",\r\n		K1.\"LineText\",\r\n		K1.\"PickStatus\",\r\n		K1.\"PickQty\",\r\n		K1.\"PickIdNo\",\r\n		K1.\"ReleaseQty\",\r\n		K1.\"ResAlloc\",\r\n		K1.\"StartDate\",\r\n		K1.\"EndDate\",\r\n		K1.\"StageId\",\r\n		K1.\"BaseQtyNum\",\r\n		K1.\"BaseQtyDen\",\r\n		K1.\"ReqDays\",\r\n		K1.\"RtCalcProp\",\r\n	 
23;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_ORDERS_CHIPS_DETAIL\r\n(GROUPNUM VARCHAR(50)\r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n    SELECT * FROM (\r\n        SELECT \r\n            K2.\"SalUnitMsr\",\r\n            CAST(K0.\"DocNum\" AS VARCHAR(100)) AS \"DocNum\",\r\n            K0.\"DocEntry\",\r\n            CASE \r\n                WHEN K0.\"Status\"='R' THEN 'Released' \r\n                WHEN K0.\"Status\"='L' THEN 'Close'\r\n                WHEN K0.\"Status\"='P' THEN 'Planned' \r\n                ELSE 'Canceled' \r\n            END AS \"Status\",\r\n            K0.\"CloseDate\",\r\n            K0.\"ItemCode\",\r\n            K0.\"CreateDate\",\r\n            K0.\"PlannedQty\",\r\n            K0.\"CmpltQty\",\r\n            K0.\"RjctQty\",\r\n            K0.\"PostDate\",\r\n            K0.\"DueDate\",\r\n            K0.\"OriginAbs\",\r\n            K0.\"OriginNum\",    \r\n            K0.\"Warehouse\",\r\n            K0.\"Uom\",\r\n            K0.\"ProdName\",\r\n            (SELECT T0.\"DocEntry\" \r\n             FROM OWOR T0 \r\n             WHERE T0.\"U_CTS_Type\"='Kid' \r\n               AND T                                                                                                         
24;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_ORDERS_CHIPS_HEADER\r\n()\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n    SELECT * FROM (\r\n        SELECT \r\n            K2.\"SalUnitMsr\",\r\n            CAST(K0.\"DocNum\" AS VARCHAR(100)) AS \"DocNum\",\r\n            K0.\"DocEntry\",\r\n            (case when\r\n		K0.\"Status\"='R'AND K0.\"U_CTS_STime\" IS NULL  THEN 'Released' \r\n		when K0.\"Status\"='R'and  K0.\"U_CTS_STime\" IS NOT NULL THEN 'Open' \r\n		when K0.\"Status\"='L' THEN 'Close'\r\n		when K0.\"Status\"='P' THEN 'Planned' \r\n		else 'Canceled' END ) as \"Status\",\r\n            K0.\"CloseDate\",\r\n            K0.\"ItemCode\",\r\n            K0.\"CreateDate\",\r\n            K0.\"PlannedQty\",\r\n            K0.\"CmpltQty\",\r\n            K0.\"RjctQty\",\r\n            K0.\"PostDate\",\r\n            K0.\"DueDate\",\r\n            K0.\"OriginAbs\",\r\n            K0.\"OriginNum\",    \r\n            K0.\"Warehouse\",\r\n            K0.\"Uom\",\r\n            K0.\"ProdName\",\r\n            (SELECT T0.\"DocEntry\" \r\n             FROM OWOR T0 \r\n             WHERE T0.\"U_CTS_Type\"='Kid' \r\n                                                                                                                
25;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_ORDERS_CHIPS_HEADER_UPDATED\r\n()\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n    SELECT * FROM (\r\n        SELECT \r\n            K2.\"SalUnitMsr\",\r\n            CAST(K0.\"DocNum\" AS VARCHAR(100)) AS \"DocNum\",\r\n            cast(K0.\"DocEntry\" AS VARCHAR(100))AS \"DocEntry\",\r\n            (case when\r\n		K0.\"Status\"='R'AND K0.\"U_CTS_STime\" IS NULL  THEN 'Released' \r\n		when K0.\"Status\"='R'and  K0.\"U_CTS_STime\" IS NOT NULL THEN 'Open' \r\n		when K0.\"Status\"='L' THEN 'Close'\r\n		when K0.\"Status\"='P' THEN 'Planned' \r\n		else 'Canceled' END ) as \"Status\",\r\n            K0.\"CloseDate\",\r\n            K0.\"ItemCode\",\r\n            K0.\"CreateDate\",\r\n            K0.\"PlannedQty\",\r\n            K0.\"CmpltQty\",\r\n            K0.\"RjctQty\",\r\n            K0.\"PostDate\",\r\n            K0.\"DueDate\",\r\n            K0.\"OriginAbs\",\r\n            K0.\"OriginNum\",    \r\n            K0.\"Warehouse\",\r\n            K0.\"Uom\",\r\n            K0.\"ProdName\",\r\n            (SELECT T0.\"DocEntry\" \r\n             FROM OWOR T0 \r\n                                                                                                                  
26;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_ORDERS_CHIPS_HEADER_VG\r\n()\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n    SELECT * FROM (\r\n        SELECT \r\n            K2.\"SalUnitMsr\",\r\n            CAST(K0.\"DocNum\" AS VARCHAR(100)) AS \"DocNum\",\r\n            K0.\"DocEntry\",\r\n            CASE \r\n                WHEN K0.\"Status\"='R' THEN 'Released' \r\n                WHEN K0.\"Status\"='L' THEN 'Close'\r\n                WHEN K0.\"Status\"='P' THEN 'Planned' \r\n                ELSE 'Canceled' \r\n            END AS \"Status\",\r\n            K0.\"CloseDate\",\r\n            K0.\"ItemCode\",\r\n            K0.\"CreateDate\",\r\n            K0.\"PlannedQty\",\r\n            K0.\"CmpltQty\",\r\n            K0.\"RjctQty\",\r\n            K0.\"PostDate\",\r\n            K0.\"DueDate\",\r\n            K0.\"OriginAbs\",\r\n            K0.\"OriginNum\",    \r\n            K0.\"Warehouse\",\r\n            K0.\"Uom\",\r\n            K0.\"ProdName\",\r\n            (SELECT T0.\"DocEntry\" \r\n             FROM OWOR T0 \r\n             WHERE T0.\"U_CTS_Type\"='Kid' \r\n               AND T0.\"OriginNum\" = K0.                                                                                                         
27;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_ORDERS_TORTS\r\n(\r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n	\r\n	SELECT \r\n		K0.\"DocNum\",\r\n		K0.\"DocEntry\",\r\n		K0.\"Status\",\r\n		K0.\"ItemCode\",\r\n		K0.\"CreateDate\",\r\n		K0.\"PlannedQty\",\r\n		K0.\"CmpltQty\",\r\n		K0.\"RjctQty\",\r\n		K0.\"PostDate\",\r\n		K0.\"DueDate\",\r\n		K0.\"OriginAbs\",\r\n		K0.\"OriginNum\",	\r\n		K0.\"Warehouse\",\r\n		K0.\"Uom\",\r\n		K0.\"ProdName\",\r\n		K1.\"LineNum\",\r\n		K1.\"ItemCode\",\r\n		K1.\"BaseQty\",\r\n		K1.\"PlannedQty\",\r\n		K1.\"IssuedQty\",\r\n		K1.\"IssueType\",\r\n		K1.\"wareHouse\",\r\n		K1.\"VisOrder\",\r\n		K1.\"WipActCode\",\r\n		K1.\"CompTotal\",\r\n		K1.\"OcrCode\",\r\n		K1.\"OcrCode2\",\r\n		K1.\"OcrCode3\",\r\n		K1.\"OcrCode4\",\r\n		K1.\"OcrCode5\",\r\n		K1.\"LocCode\",\r\n		K1.\"LogInstanc\",\r\n		K1.\"Project\",\r\n		K1.\"UomEntry\",\r\n		K1.\"UomCode\",\r\n		K1.\"ItemType\",\r\n		K1.\"AdditQty\",\r\n		K1.\"LineText\",\r\n		K1.\"PickStatus\",\r\n		K1.\"PickQty\",\r\n		K1.\"PickIdNo\",\r\n		K1.\"ReleaseQty\",\r\n		K1.\"ResAlloc\",\r\n		K1.\"StartDate\",\r\n		K1.\"EndDate\",\r\n		K1.\"StageId\",\r\n		K1.\"BaseQtyNum\",\r\n		K1.\"BaseQtyDen\",\r\n		K1.\"ReqDays\",\r\n		K1.\"RtCalcProp\",\r\n	 
28;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_ORDERS_TORTS_HEADER\r\n(\r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n	\r\n	SELECT \r\n	K2.\"SalUnitMsr\",\r\n		K0.\"DocNum\",\r\n		K0.\"DocEntry\",\r\n		(case when\r\n		K0.\"Status\"='R'AND K0.\"U_CTS_STime\" IS NULL  THEN 'Released' \r\n		when K0.\"Status\"='R'and  K0.\"U_CTS_STime\" IS NOT NULL THEN 'Open' \r\n		when K0.\"Status\"='L' THEN 'Close'\r\n		when K0.\"Status\"='P' THEN 'Planned' \r\n		else 'Canceled' END ) as \"Status\",\r\n		K0.\"ItemCode\",\r\n		K0.\"CloseDate\",\r\n		K0.\"CreateDate\",\r\n		K0.\"PlannedQty\",\r\n		K0.\"CmpltQty\",\r\n		K0.\"RjctQty\",\r\n		K0.\"PostDate\",\r\n		K0.\"DueDate\",\r\n		K0.\"OriginAbs\",\r\n		K0.\"OriginNum\",	\r\n		K0.\"Warehouse\",\r\n		K0.\"Uom\",\r\n		K0.\"ProdName\",\r\n		\r\n		\r\n		--(case when K0.\"U_CTS_STime\" is not null then cast(TO_VARCHAR(K0.\"StartDate\",'YYYY-MM-DD') AS Date) else cast( '' AS Date) end) as \"StartDate1\",\r\n		\r\n		(SELECT T0.\"DocEntry\" FROM OWOR T0 WHERE T0.\"U_CTS_Type\"='Kid' and  T0.\"OriginNum\" =K0.\"OriginNum\" and T0.\"ItemCode\" like 'DOH%' and T0.\"Status\"!='C')AS \"Dough\"\r\n		,(case when K0.\"U_CTS_                                                                                
29;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_ORDERS_TORTS_HEADER_UP\r\n(\r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n	\r\n	SELECT \r\n	K2.\"SalUnitMsr\",\r\n		K0.\"DocNum\",\r\n		K0.\"DocEntry\",\r\n		(case when\r\n		K0.\"Status\"='R'AND K0.\"U_CTS_STime\" IS NULL  THEN 'Released' \r\n		when K0.\"Status\"='R'and  K0.\"U_CTS_STime\" IS NOT NULL THEN 'Open' \r\n		when K0.\"Status\"='L' THEN 'Close'\r\n		when K0.\"Status\"='P' THEN 'Planned' \r\n		else 'Canceled' END ) as \"Status\",\r\n		K0.\"ItemCode\",\r\n		K0.\"CloseDate\",\r\n		K0.\"CreateDate\",\r\n		K0.\"PlannedQty\",\r\n		K0.\"CmpltQty\",\r\n		K0.\"RjctQty\",\r\n		K0.\"PostDate\",\r\n		K0.\"DueDate\",\r\n		K0.\"OriginAbs\",\r\n		K0.\"OriginNum\",	\r\n		K0.\"Warehouse\",\r\n		K0.\"Uom\",\r\n		K0.\"ProdName\",\r\n		\r\n		\r\n		--(case when K0.\"U_CTS_STime\" is not null then cast(TO_VARCHAR(K0.\"StartDate\",'YYYY-MM-DD') AS Date) else cast( '' AS Date) end) as \"StartDate1\",\r\n		\r\n		(SELECT T0.\"DocEntry\" FROM OWOR T0 WHERE T0.\"U_CTS_Type\"='Kid' and  T0.\"OriginNum\" =K0.\"OriginNum\" and T0.\"ItemCode\" like 'DOH%' and T0.\"Status\"!='C')AS \"Dough\"\r\n		,(case when K0.\"U_C                                                                                
30;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_ORDERS_TORTS_HEADER_UPDATED\r\n(\r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n	\r\n	SELECT \r\n	K2.\"SalUnitMsr\",\r\n		K0.\"DocNum\",\r\n		K0.\"DocEntry\",\r\n		(case when\r\n		K0.\"Status\"='R'AND K0.\"U_CTS_STime\" IS NULL  THEN 'Released' \r\n		when K0.\"Status\"='R'and  K0.\"U_CTS_STime\" IS NOT NULL THEN 'Open' \r\n		when K0.\"Status\"='L' THEN 'Close'\r\n		when K0.\"Status\"='P' THEN 'Planned' \r\n		else 'Canceled' END ) as \"Status\",\r\n		K0.\"ItemCode\",\r\n		K0.\"CloseDate\",\r\n		K0.\"CreateDate\",\r\n		K0.\"PlannedQty\",\r\n		K0.\"CmpltQty\",\r\n		K0.\"RjctQty\",\r\n		K0.\"PostDate\",\r\n		K0.\"DueDate\",\r\n		K0.\"OriginAbs\",\r\n		K0.\"OriginNum\",	\r\n		K0.\"Warehouse\",\r\n		K0.\"Uom\",\r\n		K0.\"ProdName\",\r\n		\r\n		\r\n		--(case when K0.\"U_CTS_STime\" is not null then cast(TO_VARCHAR(K0.\"StartDate\",'YYYY-MM-DD') AS Date) else cast( '' AS Date) end) as \"StartDate1\",\r\n		\r\n		(SELECT T0.\"DocEntry\" FROM OWOR T0 WHERE T0.\"U_CTS_Type\"='Kid' and  T0.\"OriginNum\" =K0.\"OriginNum\" and T0.\"ItemCode\" like 'DOH%' and T0.\"Status\"!='C')AS \"Dough\"\r\n		,(case when K0                                                                                 
31;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_ORDER_BY_DOCENTRY\r\n(\r\n	IN DocEntryPO INTEGER\r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n	\r\n	SELECT \r\n	  K2.\"U_CTS_ProdRec\" AS \"QtyComponents\",\r\n	(SELECT (CASE WHEN T2.\"ItmsGrpCod\" =129 THEN 'CHIPS' ELSE NULL END ) FROM OITM T2 WHERE T2.\"ItemCode\"=K0.\"ItemCode\")\r\n	 AS \"ChipsInd\",\r\n	(SELECT T0.\"U_CTS_GroupChips\" FROM OWOR T0 WHERE T0.\"U_CTS_Type\" = 'Parent' AND T0.\"OriginNum\"=(K0.\"OriginNum\") )as \"GroupParent\",\r\n	\r\n	K0.\"U_CTS_Type\" AS \"ParentOrKid\",\r\n	(SELECT T1.\"U_CTS_Paused\"\r\n		FROM OWOR T1 \r\n		 WHERE \r\n		 T1.\"OriginNum\"=K0.\"OriginNum\" AND T1.\"U_CTS_Type\"='Parent')\r\n	 as \"ParentPaused\",\r\n	\r\n	\r\n	(SELECT cast ((T1.\"PlannedQty\"-T1.\"CmpltQty\") as int)\r\n		FROM OWOR T1 \r\n		 WHERE \r\n		 T1.\"OriginNum\"=K0.\"OriginNum\" AND T1.\"U_CTS_Type\"='Parent')\r\n	 as \"PalletsFlt\",\r\n	 K4.\"AbsEntry\", K4.\"BinCode\",\r\n	(SELECT T2.\"U_CTS_ShelfLife\" \r\n		FROM OWOR T1\r\n		inner join OITM T2 ON T1.\"ItemCode\"=T2.\"ItemCode\"\r\n		 WHERE \r\n		 T1.\"OriginNum\"=K0.\"OriginNum\" AND T1.\"U_CTS_Type\"='Parent')as \"Be                                                                                        
32;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_ORDER_BY_DOCENTRY_CHIPS\r\n(\r\n    IN DocEntryPO VARCHAR(50)\r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n    SELECT \r\n   \r\n     K2.\"U_CTS_ProdRec\" AS \"QtyComponents\",\r\n  SUM(\r\n    (SELECT CEIL(K0.\"PlannedQty\" / T0.\"SalPackUn\") \r\n     FROM OITM T0 \r\n     WHERE K0.\"ItemCode\" = T0.\"ItemCode\")\r\n  ) AS \"PalletTotal\"\r\n\r\n  ,\r\n        (SELECT T0.\"U_CTS_GroupChips\" FROM OWOR T0 WHERE T0.\"U_CTS_Type\" = 'Parent' AND T0.\"OriginNum\"=max(K0.\"OriginNum\") )as \"GroupParent\",\r\n    	:DocEntryPO AS \"DocEntryPOMixes\",\r\n         MAX(K0.\"U_CTS_Type\") AS \"ParentOrKid\",\r\n         STRING_AGG(K0.\"DocNum\",',') AS \"DocNum\",\r\n         STRING_AGG(K0.\"DocEntry\",',') AS \"DocEntry\",\r\n           STRING_AGG(K0.\"PlannedQty\",',') AS \"Proportion\",\r\n        MAX(\r\n            CASE \r\n                WHEN K0.\"Status\"='R' THEN 'Realese'\r\n                WHEN K0.\"Status\"='L' THEN 'Close'\r\n                WHEN K0.\"Status\"='P' THEN 'Planned'\r\n                ELSE 'Canceled' \r\n            END\r\n        ) AS \"Status\",\r\n                                                                                                         
33;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_ORDER_BY_DOCENTRY_CHIPS_UPDATED\r\n(\r\n    IN DocEntryPO VARCHAR(50)\r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n    SELECT * FROM(SELECT \r\n    K1.\"U_OrderID\",\r\n   \r\n     K2.\"U_CTS_ProdRec\" AS \"QtyComponents\",\r\n  SUM(\r\n    (SELECT CEIL(K0.\"PlannedQty\" / T0.\"SalPackUn\") \r\n     FROM OITM T0 \r\n     WHERE K0.\"ItemCode\" = T0.\"ItemCode\")\r\n  ) AS \"PalletTotal\"\r\n\r\n  ,\r\n        (SELECT T0.\"U_CTS_GroupChips\" FROM OWOR T0 WHERE T0.\"U_CTS_Type\" = 'Parent' AND T0.\"OriginNum\"=max(K0.\"OriginNum\") )as \"GroupParent\",\r\n    	:DocEntryPO AS \"DocEntryPOMixes\",\r\n         cast (MAX(K0.\"U_CTS_Type\")as varchar(50)) AS \"ParentOrKid\",\r\n         STRING_AGG(K0.\"DocNum\",',') AS \"DocNum\",\r\n         STRING_AGG(K0.\"DocEntry\",',') AS \"DocEntry\",\r\n           STRING_AGG(K0.\"PlannedQty\",',') AS \"Proportion\",\r\n        MAX(\r\n            CASE \r\n                WHEN K0.\"Status\"='R' THEN 'Realese'\r\n                WHEN K0.\"Status\"='L' THEN 'Close'\r\n                WHEN K0.\"Status\"='P' THEN 'Planned'\r\n                                                                                                                        
34;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_ORDER_BY_DOCENTRY_CHIPS_UPDATED_bk1002\r\n(\r\n    IN DocEntryPO VARCHAR(50)\r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n    SELECT \r\n   \r\n     K2.\"U_CTS_ProdRec\" AS \"QtyComponents\",\r\n  SUM(\r\n    (SELECT CEIL(K0.\"PlannedQty\" / T0.\"SalPackUn\") \r\n     FROM OITM T0 \r\n     WHERE K0.\"ItemCode\" = T0.\"ItemCode\")\r\n  ) AS \"PalletTotal\"\r\n\r\n  ,\r\n        (SELECT T0.\"U_CTS_GroupChips\" FROM OWOR T0 WHERE T0.\"U_CTS_Type\" = 'Parent' AND T0.\"OriginNum\"=max(K0.\"OriginNum\") )as \"GroupParent\",\r\n    	:DocEntryPO AS \"DocEntryPOMixes\",\r\n         MAX(K0.\"U_CTS_Type\") AS \"ParentOrKid\",\r\n         STRING_AGG(K0.\"DocNum\",',') AS \"DocNum\",\r\n         STRING_AGG(K0.\"DocEntry\",',') AS \"DocEntry\",\r\n           STRING_AGG(K0.\"PlannedQty\",',') AS \"Proportion\",\r\n        MAX(\r\n            CASE \r\n                WHEN K0.\"Status\"='R' THEN 'Realese'\r\n                WHEN K0.\"Status\"='L' THEN 'Close'\r\n                WHEN K0.\"Status\"='P' THEN 'Planned'\r\n                ELSE 'Canceled' \r\n            END\r\n        )                                                                                                             
35;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_ORDER_BY_DOCENTRY_CHIPS_UPDATED_V1\r\n(\r\n    IN DocEntryPO VARCHAR(50)\r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n    SELECT * FROM(SELECT \r\n    K1.\"U_OrderID\",\r\n   \r\n     K2.\"U_CTS_ProdRec\" AS \"QtyComponents\",\r\n  SUM(\r\n    (SELECT CEIL(K0.\"PlannedQty\" / T0.\"SalPackUn\") \r\n     FROM OITM T0 \r\n     WHERE K0.\"ItemCode\" = T0.\"ItemCode\")\r\n  ) AS \"PalletTotal\"\r\n\r\n  ,\r\n        (SELECT T0.\"U_CTS_GroupChips\" FROM OWOR T0 WHERE T0.\"U_CTS_Type\" = 'Parent' AND T0.\"OriginNum\"=max(K0.\"OriginNum\") )as \"GroupParent\",\r\n    	:DocEntryPO AS \"DocEntryPOMixes\",\r\n         cast (MAX(K0.\"U_CTS_Type\")as varchar(50)) AS \"ParentOrKid\",\r\n         STRING_AGG(K0.\"DocNum\",',') AS \"DocNum\",\r\n         STRING_AGG(K0.\"DocEntry\",',') AS \"DocEntry\",\r\n           STRING_AGG(K0.\"PlannedQty\",',') AS \"Proportion\",\r\n        MAX(\r\n            CASE \r\n                WHEN K0.\"Status\"='R' THEN 'Realese'\r\n                WHEN K0.\"Status\"='L' THEN 'Close'\r\n                WHEN K0.\"Status\"='P' THEN 'Planned'\r\n                                                                                                                     
36;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_ORDER_BY_DOCENTRY_UPDATED\r\n(\r\n	IN DocEntryPO INTEGER\r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n	\r\n	SELECT \r\n	  K2.\"U_CTS_ProdRec\" AS \"QtyComponents\",\r\n	(SELECT (CASE WHEN T2.\"ItmsGrpCod\" =129 THEN 'CHIPS' ELSE NULL END ) FROM OITM T2 WHERE T2.\"ItemCode\"=K0.\"ItemCode\")\r\n	 AS \"ChipsInd\",\r\n	(SELECT T0.\"U_CTS_GroupChips\" FROM OWOR T0 WHERE T0.\"U_CTS_Type\" = 'Parent' AND T0.\"OriginNum\"=(K0.\"OriginNum\") )as \"GroupParent\",\r\n	\r\n	K0.\"U_CTS_Type\" AS \"ParentOrKid\",\r\n	(SELECT T1.\"U_CTS_Paused\"\r\n		FROM OWOR T1 \r\n		 WHERE \r\n		 T1.\"OriginNum\"=K0.\"OriginNum\" AND T1.\"U_CTS_Type\"='Parent')\r\n	 as \"ParentPaused\",\r\n	\r\n	\r\n	(SELECT cast ((T1.\"PlannedQty\"-T1.\"CmpltQty\") as int)\r\n		FROM OWOR T1 \r\n		 WHERE \r\n		 T1.\"OriginNum\"=K0.\"OriginNum\" AND T1.\"U_CTS_Type\"='Parent')\r\n	 as \"PalletsFlt\",\r\n	 K4.\"AbsEntry\", K4.\"BinCode\",\r\n	(SELECT T2.\"U_CTS_ShelfLife\" \r\n		FROM OWOR T1\r\n		inner join OITM T2 ON T1.\"ItemCode\"=T2.\"ItemCode\"\r\n		 WHERE \r\n		 T1.\"OriginNum\"=K0.\"OriginNum\" AND T1.\"U_CTS_Type\"='Parent                                                                                         
37;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_PRODUCTION_PALLETS (IN PO_DOCENTRY VARCHAR(50))\r\nAS\r\nBEGIN\r\n\r\n    SELECT\r\n        ROW_NUMBER() OVER (ORDER BY T0.\"CreateDate\" ASC, T0.\"CreateTime\" ASC, T0.\"DocEntry\" ASC) || '/' || \r\n        (SELECT CEIL(T0.\"PlannedQty\"/T1.\"SalPackUn\") \r\n         FROM OWOR T0 \r\n         INNER JOIN OITM T1 ON T1.\"ItemCode\" = T0.\"ItemCode\" \r\n         WHERE T0.\"DocEntry\" = :PO_DOCENTRY) AS \"No.Pallet\",\r\n        T0.\"U_CTS_PO\" AS \"LineShift\",\r\n        T0.\"DocEntry\", \r\n        T0.\"U_CTS_PO_DOCENTRY\" AS \"DOCENTRYPARENT\",\r\n        (SELECT K0.\"NumAtCard\" \r\n         FROM ORDR K0 \r\n         WHERE K0.\"DocNum\" = (SELECT K1.\"OriginNum\" \r\n                              FROM OWOR K1 \r\n                              WHERE K1.\"DocEntry\" = T0.\"U_CTS_PO_DOCENTRY\")\r\n        ) AS \"CustomerPO\",\r\n        (SELECT K0.\"ItemName\" \r\n         FROM OITM K0 \r\n         WHERE K0.\"ItemCode\" = T0.\"U_CTS_SKU\"\r\n        ) AS \"ProducDesc\",\r\n        CAST(T0.\"CreateDate\" AS DATE) AS \"DATE\",\r\n        LPAD(CAST(T0.\"CreateTime\" / 100                                                                                                                   
38;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_SHIFTS\r\n( \r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n	\r\nSELECT T0.\"Code\", T0.\"Name\" FROM \"@CTS_TURNO\"  T0;\r\n
39;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_SO_PO_ASSOCIATED\r\n(\r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n	\r\n	SELECT \r\n		K0.\"DocEntry\",\r\n		K0.\"DocNum\",\r\n		K0.\"DocType\",\r\n		K0.\"CANCELED\",\r\n		K0.\"DocStatus\",\r\n		K0.\"ObjType\",\r\n		K0.\"DocDate\",\r\n		K0.\"DocDueDate\",\r\n		K0.\"CardCode\",\r\n		K0.\"CardName\",\r\n		K0.\"Address\",\r\n		K0.\"NumAtCard\",\r\n		K0.\"DocCur\",\r\n		K0.\"DocTotal\",\r\n		K1.\"DocEntry\" AS \"DocEntryPO\"\r\n	FROM ORDR K0\r\n	INNER JOIN OWOR K1 ON K1.\"OriginAbs\" = K0.\"DocEntry\"\r\n	WHERE K0.\"CANCELED\" <> 'Y' AND (K1.\"Status\" = 'P' OR K1.\"Status\" = 'R')\r\n	GROUP BY\r\n		K0.\"DocEntry\",\r\n		K0.\"DocNum\",\r\n		K0.\"DocType\",\r\n		K0.\"CANCELED\",\r\n		K0.\"DocStatus\",\r\n		K0.\"ObjType\",\r\n		K0.\"DocDate\",\r\n		K0.\"DocDueDate\",\r\n		K0.\"CardCode\",\r\n		K0.\"CardName\",\r\n		K0.\"Address\",\r\n		K0.\"NumAtCard\",\r\n		K0.\"DocCur\",\r\n		K0.\"DocTotal\",\r\n		K1.\"DocEntry\"\r\n	ORDER BY K0.\"DocEntry\" ASC;\r\n	\r\nEND;                                                                                                                                                                                                                                         
40;CREATE PROCEDURE CTS_ARTESANO_PROD_GET_USERS\r\n( in USER_NAME VARCHAR(50)\r\n)\r\nLANGUAGE SQLSCRIPT \r\nAS\r\nBEGIN\r\n	\r\n	SELECT T0.\"USER_CODE\",T0.\"U_NAME\", T0.\"U_CTS_PLine\" as \"LineCode\",\r\n(SELECT K0.\"Name\" FROM \"@CTS_PRODLINE\"  K0 WHERE K0.\"Code\"=T0.\"U_CTS_PLine\") AS \"LineName\", \r\nT0.\"U_CTS_Turno\" as \"LineShift\", (SELECT K0.\"Name\" FROM \"@CTS_TURNO\"  K0 WHERE K0.\"Code\"=T0.\"U_CTS_Turno\") AS \"ShiftnName\"\r\n ,T0.\"U_PType\" as \"path\"FROM OUSR T0 WHERE T0.\"USER_CODE\"=:USER_NAME;\r\n
